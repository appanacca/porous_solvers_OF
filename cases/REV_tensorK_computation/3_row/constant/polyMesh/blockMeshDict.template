/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.3.0                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;

vertices
(
    (-1 -1 -1)
    (1 -1 -1)
    (1 1 -1)
    (-1 1 -1)
    (-1 -1 1)
    (1 -1 1)
    (1 1 1)
    (-1 1 1)
);

blocks
(
    hex (0 1 2 3 4 5 6 7) (|- n_elem_mesh -|  |- n_elem_mesh -| |- n_elem_mesh -|) simpleGrading (1 1 1)
);

edges
(
);

boundary
(
    inlet
    {
        type cyclic;
        neighbourPatch  outlet;
        faces
        (
            (0 4 7 3)
        );
    }
    outlet
    {
        type cyclic;
        neighbourPatch  inlet;
        faces
        (
            (1 5 6 2)
        );
    }
   front
    {
<!--(if D2)-->
	type	empty;
<!--(elif D3)-->
       	type cyclic;
       	neighbourPatch  back;
<!--(end)-->
        faces
        (
            (0 1 2 3)          
        );
    }
    back
    {
<!--(if D2)-->
	type	empty;
<!--(elif D3)-->
       	type cyclic;
       	neighbourPatch  front;
<!--(end)-->
        faces
        (
            (4 5 6 7)            
        );
    }
    up
    {
        type cyclic;
        neighbourPatch  down;
        faces
        (
            (7 6 2 3)     
        );
    }
    down
    {
        type cyclic;
        neighbourPatch  up;
        faces
         (
            (4 5 1 0)
         );
    }




);

mergePatchPairs
(
);

// ************************************************************************* //
